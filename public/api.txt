Точка входа в api - https://api.portal.idc.md/api/
Можно использовать и http, но предпочтительнее https

/get_token
данные передаются через post
'login' => ['required', 'string', 'min:4', 'max:50'],
'password' => ['required', 'string', 'min:6', 'max:25'],
В качестве логина может быть и email

пример верного ответа:
{"status":200,"success":true,"data":{"token":"00cbedc0-0088-00eb-0044-00a51a4313da"}}
пример неверного ответа:
{"status":490,"success":false,"error":{"code":404,"message":"\u0423\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043b\u043e\u0433\u0438\u043d\/email \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442"}}

верные ответы вседа имеют статус 200, неверные иной, 490 используется для обработанных ошибок
Так же если ошибка была обработана success - false, а  поле error будет описание ошибки, её код и текст

далее для работы с каждым запросом нужно будет передавать токен в header
пример токена
HTTP-X-TOKEN: 000ada40-0089-00eb-00f4-00e40b395000

getUserProfile
параметров нету, по token он сам опредилит пользователя и выдаст информацию по нему
	'id'    => id,
	'login'  => login,
	'name' => name, (есть у некоторых старых учёток портала)
	'email' => email,
	'subscription' => статус подписка,  0 - нету, 1 - есть, 2 - ожидание обработки
	'paid' => статус оплаты подписка, 0 - подписка не оплачена, подписка оплачена
	'point' => точка с которой он был подписан
	'avatar' => аватарка (пока всем отдаётся одна)
	'level' => не используется,
	'dtEnd' => дата окончания подписка, с текстом описанием, если paid = 0 то пустая

logout
get, удаляет текущий токен авторизации из базы	
	
listFilter
get без параментов
список жанров, стран, годов - для поиска

main
get без параментов

главная страница, используется для формирования сетки фильмов/жанров/баннеров
используется на андройд платформе, 
в данный момент не используется на вэбе, но будет в будущем использоваться


/file/category/{cid}/{limit}
get, так же можно указать параметр page=х
для постраничного вывода
список фильмов из категории

/file/category/1/12?page=5&id_sort=id
жанр 1, 12 фильма, страница 5
лимит желательно использовать 12
в ответе указывается так же общее количество фильмов в данной категории

Типы сортировок (id)
1 - по дате
2 - по году
3 - по популярности
4 - рейтингу КП
5 - рейтингу IMDB

file/{id}
get - информация о файле

access: 0 - бесплатный фильм, 1 - по подписке, 2 - требуется отдельная покупка (в данный момент не используется)
action: 0 - абоненту требуется авторизация, 1 - можно смотреть, 2 - не заказана подписка, 3 - подписка есть но неоплачена, 4 данный файл доступен только после покупки
auth: id пользователя
auth_paid: статус оплаты подписка, как в getUserProfile
auth_sub: статус наличия подписки, как в getUserProfile
country: страна
creator: режисёр, имя + id 
genre: жанры
id: id фильма
in_the_roles: автёры, имя + id
is_favorite: есть ли в фаворитах true/false
length: длина фильма, в данный момент заглушка
list: предлагем посмотреть, в будущем будут персональные рекомендации, пока просто новинки/популярные
logo: постер
mbase_id: внутренний id
media: информация по сериям, разбито по сезонам, 
		file: id серии - надо для получения урла на неё
		isActive: признак того что в данном сериале на этой серии абонент остановился, в данный момент всегда указывает на первую серию
		link: устаревшие данные, будут в скором времени убрано
		title: название серии, её номер для сериала, если фильм то просто ...
		   в будущем тут ещё будет инфомарция о таймметке на которой остановился клиент, чтобы был выбор начать смотреть с начала или продолжить просмотр
my_vote: как ты голосовал за фильм  0 - никак, 1 дислайк, 2 хз, 3 лайк
producer: продюссеры, имя + id
rate: возрастной рейтинг 12+ / 8+ ... 0+
rate_imdb: рейтинг imdb
rate_kp: рейтинг кинопоиска
review: описание
screens: тут будут скрины
serial: сериал или нет (признак сериала более 3 серий, если 2-3 то считаем фильм)
title: название
trailer: тут будет трейлер
type_content: аналогично access, надо будет убрать, юзать лучше access
type_file: - хз зачем, всегда единица
vote: {like: 0, dislike: 0, ats: 0} - количество лайков/дизов/неопределённых за фильм 
year: год выхода фильма


file/url/{id} - получение ссылки на файл
get
id - номер серии !!! берётся из массива media в методе file


history/{limit}
get - история просмотра
в истории есть 2 дополнительных поля
season и episode, они равны 0 если это фильм из одного файла, или если это сериал то номер сезона и серии

bookmark/{limit}
get - избранное

bookmark/change/{id}
get - добавить/удалить из избранного

like/{id}/{vote}
get - id фильма, 0 - убрать голос, 1 дизлайк, 2 хз, 3 лайк

searchExt/{limit} - поиск
get 

country_list - список id стран через разделитель |
genre_list - список id жанров через разделитель |
year - год (по справочнику)
query - часть названия фильма